// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Double.proto

#ifndef PROTOBUF_Double_2eproto__INCLUDED
#define PROTOBUF_Double_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace uuv_gazebo_plugins_msgs {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Double_2eproto();
void protobuf_AssignDesc_Double_2eproto();
void protobuf_ShutdownFile_Double_2eproto();

class Double;

// ===================================================================

class Double : public ::google::protobuf::Message {
 public:
  Double();
  virtual ~Double();

  Double(const Double& from);

  inline Double& operator=(const Double& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Double& default_instance();

  void Swap(Double* other);

  // implements Message ----------------------------------------------

  Double* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Double& from);
  void MergeFrom(const Double& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 1 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:uuv_gazebo_plugins_msgs.msgs.Double)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double value_;
  friend void  protobuf_AddDesc_Double_2eproto();
  friend void protobuf_AssignDesc_Double_2eproto();
  friend void protobuf_ShutdownFile_Double_2eproto();

  void InitAsDefaultInstance();
  static Double* default_instance_;
};
// ===================================================================


// ===================================================================

// Double

// required double value = 1 [default = 0];
inline bool Double::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Double::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Double::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Double::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double Double::value() const {
  // @@protoc_insertion_point(field_get:uuv_gazebo_plugins_msgs.msgs.Double.value)
  return value_;
}
inline void Double::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:uuv_gazebo_plugins_msgs.msgs.Double.value)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace uuv_gazebo_plugins_msgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Double_2eproto__INCLUDED
